@mixin colored($high, $mid, $low, $back){
  h3{ color: $mid }
  p{ color: $low; }

  background: lighten($back, 1);
  &:nth-child(odd) { 
    background: darken($back, 1);
  }

  .left strong{
    color: $low;
  }

  .right{
    color: $mid;
  }
}

.track{
  height: $line-height;

  border: 0;

  .item-content{
    padding: $padding;
  }

  .left{
    float: left;
    width: $inner-height;
    height: $inner-height;
    margin-right: $padding;

    strong{
      text-align: right;
      display: block;
      font-family: $titlefont;
      line-height: $inner-height - $padding;
      font-size: $inner-height * 0.6;

      &.tight{
        font-size: $inner-height * 0.45;
      }
    }
  }

  .right{
    float: right;
    width: $line-height - 2 * $padding;
    height: $line-height - 2 * $padding;
    margin-left: $padding;

    i.icon, i.upvote, a{
      cursor: pointer;
    }

    i.icon, a{
      font-size: $inner-height;
      line-height: $inner-height;
      height: $inner-height;
      width: $inner-height;
      display: inline-block;
      text-align: center;
    }

  }

  h3{
    font-family: $basefont;
    font-weight: 900;
    font-size: 15px;
    margin-bottom: 0;
    height: $inner-height / 2;
    line-height: $inner-height / 2;
  }

  p{
    font-weight: 600;
    font-size: 13px;
    height: $inner-height / 2;
    line-height: $inner-height / 2;
  }  


  // Normal track
  @include colored($darkmain, $lightback, $darkgray, lighten($lightgray, 13));

  // New track
  &.new{
    @include colored($white, $white, $white, $darkmain);
    i.upvote{
      .outer{ border-color: $white; }
      .inner{ border-color: $white; }       
    }
  }


  // Dying track
  &.dying{
    @include colored($lightback, $darkgray, $gray, lighten($lightgray, 13));
    i.upvote{
      @extend .muted;
    }
  }

}


/* Track insertion */
@-webkit-keyframes insert{ 
  /* Initial state : nothing */
  0% {
    height: 0;
    opacity: 1;
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
  }

  /* Open the space */
  30% {
    height: $line-height;
    opacity: 1;
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
  }

  /* Slide the track from the left */
  100% {
    height: $line-height;
    opacity: 1;
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
  }
}


/* Track removal */
@-webkit-keyframes remove{ 
  /* Initial state : nothing */
  0% {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
    height: $line-height;
  }

  /* Slide to the right */
  30% {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
    height: $line-height;
  }

  /* Close the space */
  100% {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
    height: 0;
  }
}

.track.ng-enter {
  height: 0;
  opacity: 0; /*Trick for no flicker*/
  -webkit-transition: 1000ms linear all;
  transition: 1000ms linear all;
}

.track.ng-enter.ng-enter-active {
  -webkit-animation: insert 1000ms;
  animation: insert 1000ms;
}

.track.ng-leave {
  -webkit-transition: 1000ms linear all;
  transition: 1000ms linear all;
}

.track.ng-leave.ng-leave-active {
  -webkit-animation: remove 1000ms;
  animation: remove 1000ms;
}


/* Reordering */
.track.ng-move {
  -webkit-transform: translateY($line-height);
  transform: translateY($line-height);

  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;
}

.track.ng-move.ng-move-active {
  -webkit-transform: translateY(0px);
  transform: translateY(0px);
}

.track.ng-move + .track {
  -webkit-transform: translateY(-$line-height);
  transform: translateY(-$line-height);
}

.track.ng-move.ng-move-active + .track {
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;

  -webkit-transform: translateY(0px);
  transform: translateY(0px);
}
